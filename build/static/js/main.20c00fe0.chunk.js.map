{"version":3,"sources":["App.js","index.js"],"names":["localStorage","setItem","ReactDOM","render","react_default","a","createElement","_useState","useState","content","_useState2","Object","slicedToArray","setContent","renderer","marked","Renderer","link","href","title","text","concat","rawMarkup","setOptions","breaks","highlight","code","hljs","highlightAuto","value","sanitize","__html","toString","useEffect","className","id","rows","defaultValue","onChange","event","target","dangerouslySetInnerHTML","document","getElementById"],"mappings":"kMAsDAA,aAAaC,QAAQ,+BAAgC,qCChDrDC,IAASC,OAAOC,EAAAC,EAAAC,cDoDD,WAAM,IAAAC,EAEWC,mBAAS,CAAEC,QAvD1B,grCAqDIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEZE,EAFYC,EAAA,GAEHG,EAFGH,EAAA,GAQbI,EAAW,IAAIC,IAAOC,SAC5BF,EAASG,KAAO,SAAUC,EAAMC,EAAOC,GACrC,MAAO,4BAAAC,OAA4BH,EAA5B,MAAAG,OAAqCD,GAAS,QAEvD,IAAME,EAAY,WAChBP,IAAOQ,WAAW,CAChBT,SAAUA,EACVU,QAAQ,EACRC,UAAW,SAAUC,GACnB,OAAOC,IAAKC,cAAcF,GAAMG,SAGpC,IAAIP,EAAYP,IAAON,EAAQA,QAAS,CAAEqB,UAAU,IAEpD,MAAO,CACLC,OAAQT,EAAUU,aAMtB,OAHAC,oBAAU,WACRX,KACC,IAEDlB,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,aACb9B,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,OACb9B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,6BAA6BC,GAAG,SAC7C/B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAAU4B,UAAU,eAAeE,KAAK,IAAID,GAAG,SAASE,aAAc5B,EAAQA,QAAS6B,SA/B1E,SAACC,GACpB1B,EAAW,CAAEJ,QAAS8B,EAAMC,OAAOX,YAgC/BzB,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,6BAA6BC,GAAG,UAC7C/B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAK6B,GAAG,UAAUM,wBAAyBnB,UC3FrC,MAAoBoB,SAASC,eAAe","file":"static/js/main.20c00fe0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport marked from 'marked';\nimport hljs from 'highlight.js'\n\n\nconst placeholder = \n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nconst projectName = \"markdown-previewer-Yan-Santos-Policarpo\";\nlocalStorage.setItem('Yan-Santos-Policarpo_project', 'Markdown Previewer ');\n\n\n\nexport default () => {\n\n  const [content, setContent] = useState({ content:placeholder })\n\n  const handleChange = (event) => {\n    setContent({ content: event.target.value })\n  }\n  // INSERTS target=\"_blank\" INTO HREF TAGS (required for codepen links)\n  const renderer = new marked.Renderer();\n  renderer.link = function (href, title, text) {\n    return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\n  }\n  const rawMarkup = () => {\n    marked.setOptions({\n      renderer: renderer,\n      breaks: true,\n      highlight: function (code) {\n        return hljs.highlightAuto(code).value\n      }\n    })\n    let rawMarkup = marked(content.content, { sanitize: true })\n    //console.log(rawMarkup)\n    return {\n      __html: rawMarkup.toString()\n    }\n  }\n  useEffect(() => {\n    rawMarkup();\n  }, [])\n  return (\n    <div className=\"container\">\n      <h1>Markdown Parser</h1>\n      <div className=\"row\">\n        <div className=\"form-group col-12 col-md-6\" id=\"input\">\n          <label>Markdown</label>\n          <textarea className=\"form-control\" rows=\"5\" id=\"editor\" defaultValue={content.content} onChange={handleChange}></textarea>\n        </div>\n        <div className=\"form-group col-12 col-md-6\" id=\"output\">\n          <label>Output</label>\n          <div id=\"preview\" dangerouslySetInnerHTML={rawMarkup()}></div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { default as MarkdownEditor } from './App';\nimport './style.css'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<MarkdownEditor />, document.getElementById('root'));\n\n"],"sourceRoot":""}